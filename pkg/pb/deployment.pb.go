// Code generated by protoc-gen-go. DO NOT EDIT.
// source: deployment.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateDeploymentReq struct {
	DeploymentName           string   `protobuf:"bytes,1,opt,name=deploymentName,proto3" json:"deploymentName,omitempty"`
	EnableDuplicateFiltering bool     `protobuf:"varint,2,opt,name=enableDuplicateFiltering,proto3" json:"enableDuplicateFiltering,omitempty"`
	DeployChangedOnly        bool     `protobuf:"varint,3,opt,name=deployChangedOnly,proto3" json:"deployChangedOnly,omitempty"`
	DeploymentSource         string   `protobuf:"bytes,4,opt,name=deploymentSource,proto3" json:"deploymentSource,omitempty"`
	TenantId                 string   `protobuf:"bytes,5,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	FileName                 string   `protobuf:"bytes,6,opt,name=fileName,proto3" json:"fileName,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *CreateDeploymentReq) Reset()         { *m = CreateDeploymentReq{} }
func (m *CreateDeploymentReq) String() string { return proto.CompactTextString(m) }
func (*CreateDeploymentReq) ProtoMessage()    {}
func (*CreateDeploymentReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_fac0ec10f8e4d7ff, []int{0}
}

func (m *CreateDeploymentReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDeploymentReq.Unmarshal(m, b)
}
func (m *CreateDeploymentReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDeploymentReq.Marshal(b, m, deterministic)
}
func (m *CreateDeploymentReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDeploymentReq.Merge(m, src)
}
func (m *CreateDeploymentReq) XXX_Size() int {
	return xxx_messageInfo_CreateDeploymentReq.Size(m)
}
func (m *CreateDeploymentReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDeploymentReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDeploymentReq proto.InternalMessageInfo

func (m *CreateDeploymentReq) GetDeploymentName() string {
	if m != nil {
		return m.DeploymentName
	}
	return ""
}

func (m *CreateDeploymentReq) GetEnableDuplicateFiltering() bool {
	if m != nil {
		return m.EnableDuplicateFiltering
	}
	return false
}

func (m *CreateDeploymentReq) GetDeployChangedOnly() bool {
	if m != nil {
		return m.DeployChangedOnly
	}
	return false
}

func (m *CreateDeploymentReq) GetDeploymentSource() string {
	if m != nil {
		return m.DeploymentSource
	}
	return ""
}

func (m *CreateDeploymentReq) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *CreateDeploymentReq) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

type CreateDeploymentResp struct {
	Id                   string        `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name                 string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Source               string        `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	TenantId             string        `protobuf:"bytes,4,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	Time                 string        `protobuf:"bytes,5,opt,name=time,proto3" json:"time,omitempty"`
	Err                  *CamundaError `protobuf:"bytes,6,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CreateDeploymentResp) Reset()         { *m = CreateDeploymentResp{} }
func (m *CreateDeploymentResp) String() string { return proto.CompactTextString(m) }
func (*CreateDeploymentResp) ProtoMessage()    {}
func (*CreateDeploymentResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_fac0ec10f8e4d7ff, []int{1}
}

func (m *CreateDeploymentResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDeploymentResp.Unmarshal(m, b)
}
func (m *CreateDeploymentResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDeploymentResp.Marshal(b, m, deterministic)
}
func (m *CreateDeploymentResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDeploymentResp.Merge(m, src)
}
func (m *CreateDeploymentResp) XXX_Size() int {
	return xxx_messageInfo_CreateDeploymentResp.Size(m)
}
func (m *CreateDeploymentResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDeploymentResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDeploymentResp proto.InternalMessageInfo

func (m *CreateDeploymentResp) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateDeploymentResp) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateDeploymentResp) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *CreateDeploymentResp) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *CreateDeploymentResp) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *CreateDeploymentResp) GetErr() *CamundaError {
	if m != nil {
		return m.Err
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateDeploymentReq)(nil), "pb.CreateDeploymentReq")
	proto.RegisterType((*CreateDeploymentResp)(nil), "pb.CreateDeploymentResp")
}

func init() { proto.RegisterFile("deployment.proto", fileDescriptor_fac0ec10f8e4d7ff) }

var fileDescriptor_fac0ec10f8e4d7ff = []byte{
	// 309 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xcf, 0x4a, 0x3b, 0x31,
	0x10, 0xc7, 0x7f, 0x9b, 0xee, 0x6f, 0xa9, 0xa3, 0x94, 0x3a, 0x8a, 0x86, 0x9e, 0xca, 0x1e, 0xa4,
	0x88, 0xf4, 0x50, 0x6f, 0x82, 0xa7, 0x56, 0xa1, 0x08, 0x0a, 0xeb, 0x13, 0x64, 0x9b, 0xb1, 0x2e,
	0xe4, 0x9f, 0x69, 0x7a, 0xe8, 0x33, 0xf8, 0x1e, 0x3e, 0xa7, 0x34, 0x5b, 0x5b, 0xed, 0xea, 0x6d,
	0xe6, 0xfb, 0x9d, 0x19, 0x3e, 0x33, 0x09, 0x74, 0x25, 0x39, 0x65, 0x57, 0x9a, 0x4c, 0x18, 0x3a,
	0x6f, 0x83, 0x45, 0xe6, 0xca, 0xde, 0xd1, 0xcc, 0x6a, 0x6d, 0x4d, 0xad, 0xe4, 0xef, 0x0c, 0x4e,
	0xc6, 0x9e, 0x44, 0xa0, 0xc9, 0xb6, 0xb8, 0xa0, 0x37, 0xbc, 0x80, 0xce, 0xae, 0xfb, 0x51, 0x68,
	0xe2, 0x49, 0x3f, 0x19, 0x1c, 0x14, 0x7b, 0x2a, 0xde, 0x00, 0x27, 0x23, 0x4a, 0x45, 0x93, 0xa5,
	0x53, 0xd5, 0x4c, 0x04, 0xba, 0xaf, 0x54, 0x20, 0x5f, 0x99, 0x39, 0x67, 0xfd, 0x64, 0xd0, 0x2e,
	0xfe, 0xf4, 0xf1, 0x0a, 0x8e, 0xeb, 0x69, 0xe3, 0x57, 0x61, 0xe6, 0x24, 0x9f, 0x8c, 0x5a, 0xf1,
	0x56, 0x6c, 0x6a, 0x1a, 0x78, 0xf9, 0x7d, 0x9f, 0x67, 0xbb, 0xf4, 0x33, 0xe2, 0x69, 0x64, 0x6a,
	0xe8, 0xd8, 0x83, 0x76, 0x20, 0x23, 0x4c, 0x98, 0x4a, 0xfe, 0x3f, 0xd6, 0x6c, 0xf3, 0xb5, 0xf7,
	0x52, 0x29, 0x8a, 0x3b, 0x65, 0xb5, 0xf7, 0x95, 0xe7, 0x1f, 0x09, 0x9c, 0x36, 0xaf, 0xb1, 0x70,
	0xd8, 0x01, 0x36, 0x95, 0x9b, 0x13, 0xb0, 0xa9, 0x44, 0x84, 0xd4, 0xac, 0x07, 0xb0, 0xa8, 0xc4,
	0x18, 0xcf, 0x20, 0x5b, 0xd4, 0x58, 0xad, 0xa8, 0x6e, 0xb2, 0x1f, 0x30, 0xe9, 0x1e, 0x0c, 0x42,
	0x1a, 0x2a, 0x4d, 0x1b, 0xc8, 0x18, 0x63, 0x0e, 0x2d, 0xf2, 0x3e, 0xb2, 0x1d, 0x8e, 0xba, 0x43,
	0x57, 0x0e, 0xc7, 0x42, 0x2f, 0x8d, 0x14, 0x77, 0xde, 0x5b, 0x5f, 0xac, 0xcd, 0xd1, 0x03, 0xc0,
	0x8e, 0x10, 0x6f, 0x21, 0xab, 0xa9, 0xf1, 0x3c, 0x96, 0x37, 0xdf, 0xb3, 0xc7, 0x7f, 0x37, 0x16,
	0x2e, 0xff, 0x57, 0x66, 0xf1, 0x2b, 0x5c, 0x7f, 0x06, 0x00, 0x00, 0xff, 0xff, 0x97, 0x63, 0xae,
	0xcf, 0x30, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DeploymentClient is the client API for Deployment service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeploymentClient interface {
	Create(ctx context.Context, in *CreateDeploymentReq, opts ...grpc.CallOption) (*CreateDeploymentResp, error)
}

type deploymentClient struct {
	cc *grpc.ClientConn
}

func NewDeploymentClient(cc *grpc.ClientConn) DeploymentClient {
	return &deploymentClient{cc}
}

func (c *deploymentClient) Create(ctx context.Context, in *CreateDeploymentReq, opts ...grpc.CallOption) (*CreateDeploymentResp, error) {
	out := new(CreateDeploymentResp)
	err := c.cc.Invoke(ctx, "/pb.Deployment/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeploymentServer is the server API for Deployment service.
type DeploymentServer interface {
	Create(context.Context, *CreateDeploymentReq) (*CreateDeploymentResp, error)
}

// UnimplementedDeploymentServer can be embedded to have forward compatible implementations.
type UnimplementedDeploymentServer struct {
}

func (*UnimplementedDeploymentServer) Create(ctx context.Context, req *CreateDeploymentReq) (*CreateDeploymentResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}

func RegisterDeploymentServer(s *grpc.Server, srv DeploymentServer) {
	s.RegisterService(&_Deployment_serviceDesc, srv)
}

func _Deployment_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDeploymentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploymentServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Deployment/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploymentServer).Create(ctx, req.(*CreateDeploymentReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Deployment_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Deployment",
	HandlerType: (*DeploymentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Deployment_Create_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "deployment.proto",
}
